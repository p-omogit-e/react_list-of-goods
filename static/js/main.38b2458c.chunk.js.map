{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","x","y","ALPABET","localeCompare","LENGTH","length","reverse","console","log","App","state","NONE","this","className","onClick","setState","type","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAsBzB,OAnBAG,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQL,GACN,KAAKJ,EAASU,QACZ,OAAOF,EAAEJ,GAAUO,cAAcF,EAAEL,IAErC,KAAKJ,EAASY,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OACtB,QACE,OAAO,MAITR,GACFC,EAAaQ,UAIfC,QAAQC,IAAIZ,EAAUC,GAEfC,G,SAtCJN,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA+CE,IAAMiB,EAAb,4MACEC,MAAQ,CACNd,SAAUJ,EAASmB,KACnBd,YAAY,GAHhB,4CAME,WAAU,IAAD,OACCA,EAAee,KAAKF,MAApBb,WAER,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,WACP,EAAKC,SAAS,CAAEnB,SAAUJ,EAASU,WAErCc,KAAK,SACLH,UAAWD,KAAKF,MAAMd,WAAaJ,EAASU,QACvC,iBACA,0BAPP,iCAYA,wBACEY,QAAS,WACP,EAAKC,SAAS,CAAEnB,SAAUJ,EAASY,UAErCY,KAAK,SACLH,UAAWD,KAAKF,MAAMd,WAAaJ,EAASY,OACvC,oBACA,6BAPP,4BAYA,wBACEU,QAAS,WACP,EAAKC,SAAS,CAAElB,YAAaA,KAE/BmB,KAAK,SACLH,UAAWD,KAAKF,MAAMb,WACjB,oBACA,6BAPP,qBAYA,wBACEiB,QAAS,WACP,EAAKC,SAAS,CAAElB,YAAY,EAAOD,SAAUJ,EAASmB,QAExDK,KAAK,SACLH,UAAU,4BALZ,sBAWF,6BACGnB,EAAkBD,EAAiBmB,KAAKF,OAAOO,KAAI,SAAAC,GAAI,OACtD,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,eA7DpC,GAAyBC,IAAMC,WC7D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.38b2458c.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  visibleGoods.sort((x, y) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return x[sortType].localeCompare(y[sortType]);\n\n      case SortType.LENGTH:\n        return x.length - y.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  render() {\n    const { isReversed } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            onClick={() => {\n              this.setState({ sortType: SortType.ALPABET });\n            }}\n            type=\"button\"\n            className={this.state.sortType === SortType.ALPABET\n              ? ('button is-info')\n              : ('button is-info is-light')}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            onClick={() => {\n              this.setState({ sortType: SortType.LENGTH });\n            }}\n            type=\"button\"\n            className={this.state.sortType === SortType.LENGTH\n              ? ('button is-success')\n              : ('button is-success is-light')}\n          >\n            Sort by length\n          </button>\n\n          <button\n            onClick={() => {\n              this.setState({ isReversed: !isReversed });\n            }}\n            type=\"button\"\n            className={this.state.isReversed\n              ? ('button is-warning')\n              : ('button is-warning is-light')}\n          >\n            Reverse\n          </button>\n\n          <button\n            onClick={() => {\n              this.setState({ isReversed: false, sortType: SortType.NONE });\n            }}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        </div>\n\n        <ul>\n          {getReorderedGoods(goodsFromServer, this.state).map(good => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}